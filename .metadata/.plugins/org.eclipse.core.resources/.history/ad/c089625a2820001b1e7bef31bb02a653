import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;

public class ConjuntoEspalhamento {
	private List<List<String>> tabela = new ArrayList<List<String>>();
	
	//Tabela espalhamento
	//Organizar pela primeira letra 
	public ConjuntoEspalhamento() {
		for(int i =0;i<26;i++) {
			LinkedList<String> lista = new LinkedList<String>();
			tabela.add(lista);
		}
	}
	//Função espalhamento 
	//Vai verificar uma palavra e devolver o indice assosiado
	private int calcularIndiceDaTabela(String palavra) {
		//retorna 0 a 25
		return palavra.toLowerCase().charAt(0)%26;
	}
	
	public void adiciona(String palavra) {
		if(!this.contem(palavra)) {
			int indice = this.calcularIndiceDaTabela(palavra);
			List<String> lista = this.tabela.get(indice);
			lista.add(palavra);
		}
	}
	public void remove(String palavra) {
		if(this.contem(palavra)) {
			int indice = this.calcularIndiceDaTabela(palavra);
			List<String> lista = this.tabela.get(indice);
			lista.remove(palavra);
		}
	}
	public boolean contem(String palavra) {
		//so vou buscar o que esta no indice da agenda
		
		int indice = this.calcularIndiceDaTabela(palavra);
		List<String> lista = this.tabela.get(indice);
		return lista.contains(palavra);
	}
	/*
	 * Este método cria uma Lista do tipo ArrayList. Porém, observe que a referência é do tipo List. Isso é
		possível por causa do Polimorfismo (capacidade de referênciar de várias maneiras um mesmo objeto). Todo
		objeto do tipo ArrayList também é do tipo List
	 */
	public List<String> pegaTodas(){
		List<String> palavras = new ArrayList<String>();
		for(int i = 0 ; i < this.tabela.size();i++) {
			palavras.addAll(this.tabela.get(i));
		}
		return palavras;
	}
	public int tamanho() {
		return this.tamanho();
	}
	
}
